//
//  <%= directive.name %>.swift
//  Buy
//
//  Created by Shopify.
//  Copyright (c) 2017 Shopify Inc. All rights reserved.
//
//  Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to deal
//  in the Software without restriction, including without limitation the rights
//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//  copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions:
//
//  The above copyright notice and this permission notice shall be included in
//  all copies or substantial portions of the Software.
//
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
//  THE SOFTWARE.
//

import Foundation
<% if import_graphql_support %>
  import GraphQLSupport
<% end %>

extension <%= schema_name %> {
  open class <%= directive.classify_name %>Directive: GraphQL.AbstractDirective {
    <%= swift_doc(directive) %>
    public init(<%= swift_directive_arg_defs(directive) %>) {
      <% unless directive.args.empty? %>
        var args: [String] = []
        <% directive.required_args.each do |arg| %>
          args.append("<%= arg.name %>:<%= generate_build_input_code(arg.name, arg.type.unwrap_non_null) %>")
        <% end %>
        <% directive.optional_args.each do |arg| %>
          if let <%= escape_reserved_word(arg.name) %> = <%= escape_reserved_word(arg.name) %> {
            args.append("<%= arg.name %>:<%= generate_build_input_code(arg.name, arg.type) %>")
          }
        <% end %>
        <% if directive.optional_args.empty? %>
          let argsString = "(\(args.joined(separator: ",")))"
        <% else %>
          let argsString: String? = args.isEmpty ? nil : "(\(args.joined(separator: ",")))"
        <% end %>
      <% end %>
      super.init(name: "<%= directive.name %>", args: argsString)
    }
  }
}
